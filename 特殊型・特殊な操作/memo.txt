・Optional
jsのよくあるバグで、nullまたは未定義の変数に対して、
値が存在する前提でアクセスしてしまうケース

・TSではstrictNullChecksがデフォルトで有効
nullまたはundefinedを厳密に扱ってくれる
・undefinedになりうるオブジェクトのプロパティを
参照しようとすると警告してくれる

・以下のような構文の絞り込みもある
    typeof x === "string"
    x instanceof HogeClass
    リテラル型の同値確認( if (x === "some message"))
    obj.xやobj["x"]やx in objによるプロパティの存在確認

・上記だけでは不十分な場合、ユーザー定義の型ガードを使用する場合もある

・unknown型 / never型
・unknown型
    どのような値でも代入できる
    できる操作は少ない：よくわからない値なので迂闊に扱えない
    any型の値はそこから何でもできた
    unknown型の値は、それを具体的な値に絞り込まないと何もできないので安全

・never型
    どのような値も代入できない
    型の絞り込みの結果、到達不能な部分などで現れる